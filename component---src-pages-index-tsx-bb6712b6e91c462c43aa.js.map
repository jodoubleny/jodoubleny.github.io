{"version":3,"file":"component---src-pages-index-tsx-bb6712b6e91c462c43aa.js","mappings":"gPAEA,MAFcA,GAAe,IAAIC,SAAQC,GAAWC,WAAWD,EAASF,KCmBxE,MAZwBI,GACpBC,EAAAA,cAAAA,MAAAA,CAAKC,UAAS,qDAAuDF,EAAME,WACvED,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,WACbF,EAAMG,OACHF,EAAAA,cAAAA,EAAAA,SAAAA,KACAA,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,mBAAiB,MACjCD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,a,wCCF1B,MAsEaE,EAAO,IAAMH,EAAAA,cAACI,EAAAA,EAAG,CAACF,MAAM,kBAErC,MAxEcG,IAAmB,MAAL,EAC1B,MAAM,EAACC,EAAW,EAAEC,IAAkBC,EAAAA,EAAAA,UAAS,IACzC,EAACC,EAAG,EAAEC,IAAUF,EAAAA,EAAAA,UAAS,KAE/BG,EAAAA,EAAAA,YAAU,KACR,MACMC,EAAYC,EAAAA,GAAUP,GAAaG,IAEfK,WASpBL,EAAIM,OAAS,QARDD,WACd,IAAI,IAAIE,EAAEP,EAAIM,OAAO,EAAGC,GAAK,EAAGA,IAAK,CACnC,MAAMC,EAAYR,EAAIS,UAAU,EAAGF,GACnCN,EAAOO,SACDE,EAAK,IACb,OACMA,EAVQ,IAUO,EAEGC,GAC1B,IAAI,IAAIJ,EAAE,EAAGA,EAAIJ,EAAUG,OAAO,EAAGC,IAAK,CACxC,MAAMC,EAAYL,EAAUM,UAAU,EAAGF,GACzCN,EAAOO,SACDE,EAhBQ,IAiBhB,GAGFE,GAEGC,MAAK,IAAMxB,YAAW,KAEnB,MAAMyB,EAAWjB,EAAY,EACzBiB,EAAWV,EAAAA,GAAAA,OAAkBN,EAAegB,GAC3ChB,EAAe,EAAE,GACrB,MACJ,GACF,CAACD,IAEJ,MAAMkB,GAAWC,EAAAA,EAAAA,KAEjB,OACEzB,EAAAA,cAAC0B,EAAAA,EAAM,KACL1B,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,sBAAoB,+CAClCD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,gEACd0B,OAAOC,KAAKC,EAAAA,GAAcC,KAAKC,GAC9B/B,EAAAA,cAACgC,EAAAA,KAAI,CACHD,IAAKA,EACLE,GAAE,QAAUF,EACZ9B,UAAU,4IACViC,QAAS,IAAMV,GAASW,EAAAA,EAAAA,KAAW,KAElCN,EAAAA,EAAaE,GAAK7B,UAIvBF,EAAAA,cAACoC,EAAc,CAACnC,UAAU,OAAOC,MAAM,OACvCF,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,wBACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,yCAAuC,cACtDD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,kCAAgC,aAAWD,EAAAA,cAAAA,KAAAA,MACxDA,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,+BAA+BQ,GAAW,wBAAMR,UAAU,iBAAe,MAE3FD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,kCAAgC,+aAO1C,C","sources":["webpack://jonpardev.github.io/./src/helpers/wait.ts","webpack://jonpardev.github.io/./src/components/horizontalrule.tsx","webpack://jonpardev.github.io/./src/pages/index.tsx"],"sourcesContent":["const wait = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport default wait;","import React from \"react\";\n\ntype HorizontalRuleProps = {\n  className?: string\n  title?: string\n}\n\nconst HorizontalRule = (props: HorizontalRuleProps) => (\n    <div className={`flex flex-row justify-center items-center mx-auto ${props.className}`}>\n        <hr className=\"w-full\" />\n        {props.title && (\n            <>\n            <span className=\"mx-2 text-white\">OR</span>\n            <hr className=\"w-full\" />\n            </>\n        )}\n    </div>\n  )\n\nexport default HorizontalRule;","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { whoIAmArr } from \"../assets/content\";\nimport wait from \"../helpers/wait\";\nimport HorizontalRule from \"../components/horizontalrule\";\nimport { skillsRecord } from \"../assets/skillSet\";\nimport { Link, PageProps } from \"gatsby\";\nimport { useAppDispatch } from \"../state/hooks\";\nimport { setIsShown } from \"../state/menuButtonSlice\";\n\nconst Index = ({}: PageProps) => {\n  const [whoIAmIndex, setWhoIAmIndex] = useState(0);\n  const [iAm, setIAm] = useState(\"\");\n\n  useEffect(() => {\n    const timerBase = 200;\n    const iAmString = whoIAmArr[whoIAmIndex].iAm;\n\n    const typingEffectAsync = async () => {\n      const prepare = async () => {\n        for(let i=iAm.length+1; i >= 0; i--) {\n          const newString = iAm.substring(0, i);\n          setIAm(newString);\n          await wait(100);\n        }\n        await wait(timerBase);\n      }\n      if (iAm.length > 0) await prepare();\n      for(let i=0; i < iAmString.length+1; i++) {\n        const newString = iAmString.substring(0, i);\n        setIAm(newString);\n        await wait(timerBase);\n      }\n    }\n\n    typingEffectAsync()\n      // .then(() => setTimeout(() => setShowDesc(true), timerBase))\n      .then(() => setTimeout(() => {\n          // setShowDesc(false);\n          const newIndex = whoIAmIndex+1;\n          if (newIndex < whoIAmArr.length) setWhoIAmIndex(newIndex);\n          else setWhoIAmIndex(0);\n        }, 5000)\n      );\n  }, [whoIAmIndex]);\n\n  const dispatch = useAppDispatch();\n\n  return(\n    <Layout>\n      <h1 className=\"text-xl text-white\">Want to see projects used a specific skill?</h1>\n      <div className=\"text-white flex flex-row justify-start gap-5 my-10 flex-wrap\">\n      {Object.keys(skillsRecord).map((key) => (\n        <Link\n          key={key}\n          to={`?tag=${key}`}\n          className=\"rounded-full px-4 py-1 border-2 no-underline border-white hover:bg-white hover:text-black active:scale-105 transition-colors duration-300\"\n          onClick={() => dispatch(setIsShown(true))}\n        >\n          {skillsRecord[key].title}\n        </Link>\n      ))}\n      </div>\n      <HorizontalRule className=\"my-5\" title=\"OR\" />\n      <div className=\"text-white space-y-6\">\n        <div className=\"text-4xl font-normal text-neutral-500\">Bangawoyo!</div>\n        <div className=\"text-2xl sm:text-4xl font-bold\">I'm Jonny,<br />\n          <span className=\"underline whitespace-nowrap\">{iAm}</span><span className=\"animate-blink\">|</span>\n        </div>\n        <div className=\"text-neutral-600 leading-loose\">\n          I still remember the moment I created my very first website with Microsoft FrontPage when I was young. \n          I was drawn to and fascinated by the early era of web technology from then. \n          Over the years, web technology has significantly changed, but my passion and love for it haven't diminished. \n          I believe the infinite possibility of the web that has a positive impact on our society by bridging the virtual environment and real life.\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const Head = () => <Seo title=\"by Jonny Park\" />\n\nexport default Index;"],"names":["ms","Promise","resolve","setTimeout","props","React","className","title","Head","Seo","_ref","whoIAmIndex","setWhoIAmIndex","useState","iAm","setIAm","useEffect","iAmString","whoIAmArr","async","length","i","newString","substring","wait","prepare","typingEffectAsync","then","newIndex","dispatch","useAppDispatch","Layout","Object","keys","skillsRecord","map","key","Link","to","onClick","setIsShown","HorizontalRule"],"sourceRoot":""}